"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[46488],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,h=d["".concat(p,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},57868:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],l={},p="Sprite animation",s={unversionedId:"tutorials/spriteAnimation",id:"tutorials/spriteAnimation",isDocsHomePage:!1,title:"Sprite animation",description:"Sprite animation is an animation played by multiple consecutive pictures at a certain time interval. The pictures are usually merged into one picture, and then the position of the picture and the order of playback are described through JSON.",source:"@site/docs/tutorials/spriteAnimation.md",sourceDirName:"tutorials",slug:"/tutorials/spriteAnimation",permalink:"/docs/tutorials/spriteAnimation",editUrl:"https://github.com/eva-engine/eva-engine.github.io/tree/master/docs/tutorials/spriteAnimation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Transition animation",permalink:"/docs/tutorials/transitionAnimation"},next:{title:"Spine skeletal animation",permalink:"/docs/tutorials/spineAnimation"}},u=[{value:"Install",id:"install",children:[{value:"With NPM",id:"with-npm",children:[],level:3},{value:"In Browser",id:"in-browser",children:[],level:3}],level:2},{value:"Usage",id:"usage",children:[],level:2},{value:"Options",id:"options",children:[{value:"resource <code>string</code>",id:"resource-string",children:[],level:3},{value:"speed <code>number</code>",id:"speed-number",children:[],level:3},{value:"autoPlay <code>boolean</code>",id:"autoplay-boolean",children:[],level:3},{value:"forwards <code>boolean</code>",id:"forwards-boolean",children:[],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"play(times)",id:"playtimes",children:[],level:3},{value:"stop()",id:"stop",children:[],level:3},{value:"gotoAndPlay(frameNumber)",id:"gotoandplayframenumber",children:[],level:3},{value:"gotoAndStop(frameNumber)",id:"gotoandstopframenumber",children:[],level:3}],level:2},{value:"Property",id:"property",children:[{value:"currentFrame <code>number</code>",id:"currentframe-number",children:[],level:3},{value:"totalFrames <code>number</code>",id:"totalframes-number",children:[],level:3}],level:2},{value:"Events",id:"events",children:[{value:"frameChange",id:"framechange",children:[],level:3},{value:"loop",id:"loop",children:[],level:3},{value:"complete",id:"complete",children:[],level:3}],level:2}],c={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sprite-animation"},"Sprite animation"),(0,a.kt)("p",null,"Sprite animation is an animation played by multiple consecutive pictures at a certain time interval. The pictures are usually merged into one picture, and then the position of the picture and the order of playback are described through JSON."),(0,a.kt)("p",null,"The bottom layer of the sprite animation of Eva.js is realized by pixi.js spriteAnimation. Therefore, in Eva.js, you can use the materials exported by the sprite animation tool supported by spriteAnimation, such as ","[TexturePacker]","(",(0,a.kt)("a",{parentName:"p",href:"https://www.codeandweb.com/texturepacker"},"https://www.codeandweb.com/texturepacker")," how-to-create-sprite-sheets-and-animations-with-pixijs5)."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://eva.js.org/playground/#/spriteAnimation"},"https://eva.js.org/playground/#/spriteAnimation"))),(0,a.kt)("h2",{id:"install"},"Install"),(0,a.kt)("h3",{id:"with-npm"},"With NPM"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @eva/plugin-renderer @eva/plugin-renderer-sprite-animation\n")),(0,a.kt)("h3",{id:"in-browser"},"In Browser"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://unpkg.com/@eva/plugin-renderer-sprite-animation@1.2.x/dist/EVA.plugin.renderer.spriteAnimation.min.js"><\/script>\n')),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import {Game, GameObject, resource, RESOURCE_TYPE} from '@eva/eva.js'\nimport {RendererSystem} from '@eva/plugin-renderer'\nimport {SpriteAnimation, SpriteAnimationSystem} from '@eva/plugin-renderer-sprite-animation'\n\nresource.addResource([\n  {\n    name:'fruit',\n    type: RESOURCE_TYPE.SPRITE_ANIMATION,\n    src: {\n      image: {\n        type:'png',\n        url:'https://gw.alicdn.com/bao/uploaded/TB15pMkkrsTMeJjSszhXXcGCFXa-377-1070.png'\n      },\n      json: {\n        type:'json',\n        url:'https://gw.alicdn.com/mt/TB1qCvumsyYBuNkSnfoXXcWgVXa.json'\n      }\n    },\n    preload: false\n  }\n])\n\nconst game = new Game({\n  systems: [\n    new RendererSystem({\n      canvas: document.querySelector('#canvas'),\n      width: 750,\n      height: 1000\n    }),\n    new SpriteAnimationSystem()\n  ]\n})\n\nconst cut = new GameObject('cut', {\n  position: {x: 225, y: 400 },\n  size: {width: 300, height: 200 },\n  origin: {x: 0, y: 0}\n})\n\nconst frame = cut.addComponent(\n  new SpriteAnimation({\n    resource:'fruit',\n    speed: 100\n  })\n)\n\nframe.play()\n\ngame.scene.addChild(cut)\n")),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("h3",{id:"resource-string"},"resource ",(0,a.kt)("inlineCode",{parentName:"h3"},"string")),(0,a.kt)("p",null,"Resource name, which needs to be preloaded by ",(0,a.kt)("inlineCode",{parentName:"p"},"resource.addResource"),"."),(0,a.kt)("h3",{id:"speed-number"},"speed ",(0,a.kt)("inlineCode",{parentName:"h3"},"number")),(0,a.kt)("p",null,"The interval time for each picture to be played, in ms."),(0,a.kt)("h3",{id:"autoplay-boolean"},"autoPlay ",(0,a.kt)("inlineCode",{parentName:"h3"},"boolean")),(0,a.kt)("p",null,"Playing at component be added."),(0,a.kt)("h3",{id:"forwards-boolean"},"forwards ",(0,a.kt)("inlineCode",{parentName:"h3"},"boolean")),(0,a.kt)("p",null,"To pause on the last frame after playback, you need to set the times parameter in the play method for it to take effect."),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"playtimes"},"play(times)"),(0,a.kt)("p",null,"Play animation, automatically play by default, times is the number of loops, default is Infinity."),(0,a.kt)("h3",{id:"stop"},"stop()"),(0,a.kt)("p",null,"Stop play."),(0,a.kt)("h3",{id:"gotoandplayframenumber"},"gotoAndPlay(frameNumber)"),(0,a.kt)("p",null,"Goes to a specific frame and begins playing the SpriteAnimation."),(0,a.kt)("h3",{id:"gotoandstopframenumber"},"gotoAndStop(frameNumber)"),(0,a.kt)("p",null,"Stops the SpriteAnimation and goes to a specific frame."),(0,a.kt)("h2",{id:"property"},"Property"),(0,a.kt)("h3",{id:"currentframe-number"},"currentFrame ",(0,a.kt)("inlineCode",{parentName:"h3"},"number")),(0,a.kt)("h3",{id:"totalframes-number"},"totalFrames ",(0,a.kt)("inlineCode",{parentName:"h3"},"number")),(0,a.kt)("h2",{id:"events"},"Events"),(0,a.kt)("h3",{id:"framechange"},"frameChange"),(0,a.kt)("h3",{id:"loop"},"loop"),(0,a.kt)("h3",{id:"complete"},"complete"))}d.isMDXComponent=!0}}]);